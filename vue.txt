2019-1-7 
初步了解vue，
cnpm install - g live-server node的服务器 live-server 执行
渲染字符串 {{message}}
v-if <div v-if="isTrue">if</div> 是否渲染
v-else <div v-else>else</div> 与if配套使用
v-show <div v-show="isShow">show</div> 通过dispaly显示隐藏
v-for <li v-for="item in items">{{item}}</li> 循环 computed 对象 返回 items
comouted : {
    sortItems : function(){
        return this.items.sort((a, b) => a - b);
    }
}

2019-1-8
v-text 渲染文字
v-html 渲染html （不推荐使用）
v-on 绑定事件<button v-on:click="clickFun">按钮</button> app中添加methods属性，methods:{clickFun:function(){事件}}
v-model 数据源绑定 双向绑定实现 修饰符：.lazy 像失去焦点事件 .number 内容为数字 .trim 内容去空格 
<input type="checkbox" v-model="isTrue"> 单个复选框选中
<input type="checkbox" value="a" v-model="names"><input type="checkbox" value="b" v-model="names"> 多个复选框 names为一个数组
<input type="radio" value="男" v-model="sex"><input type="radio" value="女" v-model="sex"> 单选框

2019-1-9
v-bind 绑定元素的属性<div v-bind:class="class"> 判断 <div :class={class:isOk}> 对象 <div :style="{obj}"> obj : {coler:"red",fontSize:"12px"}
v-pre 显示原始代码 {{message}}
v-cloak 整个都渲染完才显示
v-once 只显示首次渲染的内容

2019-1-10
Vue.directive 自定义指令 el : 本身绑定的元素 ，binding : 指令的信息对象，有指令的内容之类的 ，vnode : vue生成的虚拟节点
Vue.directive("me", {
    bind:function(el, binding, vnode) {
        //第一次绑定触发
    },
    inserted:function(el, binding, vnode) {
        //插入元素内触发
    }，
    update:function(el, binding, vnode) {
        //组件更新时触发
    }，
    componentUpdated:function(el, binding, vnode) {
        //组件后新时触发
    },
    unbind:function(el, binding, vnode) {
        //解除绑定时触发
    }
})
Vue.extend 拓展实例构造器 没搞明白，像静态的自定义组件一样
var meExtend = Vue.extend({
    tempate : "<p><a :href="url">{{name}}</a></p>",
    data : function (){
        return {
            url : "http://www.baidu.com",
            name : "百度"
        }
    }
})
new meExtend().$mount("#baidu");
Vue.set 全局操作方法 给参数重新赋值之类的 在构造器引用外部数据时，如果数据时array，通过下标修改array的内容，vue就无法监听到内容的改变，
就无法将数据渲染到页面上去，这时就需要Vue.set方法了 Vue.set(app.data, 1, "dddd"); 变量，下标，内容 Vue.set(app, "count", 2) vue对象，参数名，内容
Vue生命周期 beforCreate 初始化之前 created 初始化之后 beforMount 挂载到元素之前 mounted 挂载到元素之后 beforUpdate 更新数据之前 updated 更新数据之后 
beforDesTroy 销毁之前 destoryed 销毁之后 
